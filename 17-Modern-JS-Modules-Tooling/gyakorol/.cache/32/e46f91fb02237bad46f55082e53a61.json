{"id":"node_modules/lodash-es/isNaN.js","dependencies":[{"name":"C:\\Users\\istvan\\VSCodeProjets\\jonas_schmedtmann_js_course_2020\\17-Modern-JS-Modules-Tooling\\gyakorol\\package.json","includedInParent":true,"mtime":1626191812487},{"name":"C:\\Users\\istvan\\VSCodeProjets\\jonas_schmedtmann_js_course_2020\\17-Modern-JS-Modules-Tooling\\gyakorol\\node_modules\\lodash-es\\package.json","includedInParent":true,"mtime":1626186208790},{"name":"./isNumber.js","loc":{"line":1,"column":21},"parent":"C:\\Users\\istvan\\VSCodeProjets\\jonas_schmedtmann_js_course_2020\\17-Modern-JS-Modules-Tooling\\gyakorol\\node_modules\\lodash-es\\isNaN.js","resolved":"C:\\Users\\istvan\\VSCodeProjets\\jonas_schmedtmann_js_course_2020\\17-Modern-JS-Modules-Tooling\\gyakorol\\node_modules\\lodash-es\\isNumber.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _isNumber = _interopRequireDefault(require(\"./isNumber.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\r\n * Checks if `value` is `NaN`.\r\n *\r\n * **Note:** This method is based on\r\n * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\r\n * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\r\n * `undefined` and other non-number values.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n * @example\r\n *\r\n * _.isNaN(NaN);\r\n * // => true\r\n *\r\n * _.isNaN(new Number(NaN));\r\n * // => true\r\n *\r\n * isNaN(undefined);\r\n * // => true\r\n *\r\n * _.isNaN(undefined);\r\n * // => false\r\n */\nfunction isNaN(value) {\n  // An `NaN` primitive is the only value that is not equal to itself.\n  // Perform the `toStringTag` check first to avoid errors with some\n  // ActiveX objects in IE.\n  return (0, _isNumber.default)(value) && value != +value;\n}\n\nvar _default = isNaN;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":3,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":4,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":5,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":6,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":7,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":8,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":9,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":10,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":11,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":12,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":13,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":14,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":15,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":16,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":17,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":18,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":19,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":20,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":21,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":22,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":23,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":24,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":25,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":26,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":27,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":28,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":29,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":30,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":31,"column":0}},{"name":"isNaN","generated":{"line":40,"column":9},"source":"node_modules/lodash-es/isNaN.js","original":{"line":31,"column":9}},{"generated":{"line":40,"column":14},"source":"node_modules/lodash-es/isNaN.js","original":{"line":31,"column":0}},{"name":"value","generated":{"line":40,"column":15},"source":"node_modules/lodash-es/isNaN.js","original":{"line":31,"column":15}},{"generated":{"line":40,"column":20},"source":"node_modules/lodash-es/isNaN.js","original":{"line":31,"column":0}},{"generated":{"line":40,"column":22},"source":"node_modules/lodash-es/isNaN.js","original":{"line":31,"column":22}},{"generated":{"line":41,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":32,"column":2}},{"generated":{"line":42,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":33,"column":2}},{"generated":{"line":43,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":34,"column":2}},{"generated":{"line":44,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":35,"column":2}},{"generated":{"line":44,"column":9},"source":"node_modules/lodash-es/isNaN.js","original":{"line":35,"column":9}},{"name":"value","generated":{"line":44,"column":32},"source":"node_modules/lodash-es/isNaN.js","original":{"line":35,"column":18}},{"generated":{"line":44,"column":37},"source":"node_modules/lodash-es/isNaN.js","original":{"line":35,"column":9}},{"name":"value","generated":{"line":44,"column":42},"source":"node_modules/lodash-es/isNaN.js","original":{"line":35,"column":28}},{"generated":{"line":44,"column":47},"source":"node_modules/lodash-es/isNaN.js","original":{"line":35,"column":33}},{"generated":{"line":44,"column":51},"source":"node_modules/lodash-es/isNaN.js","original":{"line":35,"column":37}},{"name":"value","generated":{"line":44,"column":52},"source":"node_modules/lodash-es/isNaN.js","original":{"line":35,"column":38}},{"generated":{"line":44,"column":57},"source":"node_modules/lodash-es/isNaN.js","original":{"line":35,"column":2}},{"generated":{"line":45,"column":0},"source":"node_modules/lodash-es/isNaN.js","original":{"line":36,"column":1}},{"name":"isNaN","generated":{"line":47,"column":15},"source":"node_modules/lodash-es/isNaN.js","original":{"line":38,"column":15}}],"sources":{"node_modules/lodash-es/isNaN.js":"import isNumber from './isNumber.js';\r\n\r\n/**\r\n * Checks if `value` is `NaN`.\r\n *\r\n * **Note:** This method is based on\r\n * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\r\n * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\r\n * `undefined` and other non-number values.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n * @example\r\n *\r\n * _.isNaN(NaN);\r\n * // => true\r\n *\r\n * _.isNaN(new Number(NaN));\r\n * // => true\r\n *\r\n * isNaN(undefined);\r\n * // => true\r\n *\r\n * _.isNaN(undefined);\r\n * // => false\r\n */\r\nfunction isNaN(value) {\r\n  // An `NaN` primitive is the only value that is not equal to itself.\r\n  // Perform the `toStringTag` check first to avoid errors with some\r\n  // ActiveX objects in IE.\r\n  return isNumber(value) && value != +value;\r\n}\r\n\r\nexport default isNaN;\r\n"},"lineCount":null}},"error":null,"hash":"bd219cbc91dcac648f2832bfed00d127","cacheData":{"env":{}}}