{"id":"node_modules/lodash-es/clone.js","dependencies":[{"name":"C:\\Users\\istvan\\VSCodeProjets\\jonas_schmedtmann_js_course_2020\\17-Modern-JS-Modules-Tooling\\gyakorol\\package.json","includedInParent":true,"mtime":1626191812487},{"name":"C:\\Users\\istvan\\VSCodeProjets\\jonas_schmedtmann_js_course_2020\\17-Modern-JS-Modules-Tooling\\gyakorol\\node_modules\\lodash-es\\package.json","includedInParent":true,"mtime":1626186208790},{"name":"./_baseClone.js","loc":{"line":1,"column":22},"parent":"C:\\Users\\istvan\\VSCodeProjets\\jonas_schmedtmann_js_course_2020\\17-Modern-JS-Modules-Tooling\\gyakorol\\node_modules\\lodash-es\\clone.js","resolved":"C:\\Users\\istvan\\VSCodeProjets\\jonas_schmedtmann_js_course_2020\\17-Modern-JS-Modules-Tooling\\gyakorol\\node_modules\\lodash-es\\_baseClone.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _baseClone = _interopRequireDefault(require(\"./_baseClone.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n/**\r\n * Creates a shallow clone of `value`.\r\n *\r\n * **Note:** This method is loosely based on the\r\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\r\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\r\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\r\n * arrays. The own enumerable properties of `arguments` objects are cloned\r\n * as plain objects. An empty object is returned for uncloneable values such\r\n * as error objects, functions, DOM nodes, and WeakMaps.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to clone.\r\n * @returns {*} Returns the cloned value.\r\n * @see _.cloneDeep\r\n * @example\r\n *\r\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\r\n *\r\n * var shallow = _.clone(objects);\r\n * console.log(shallow[0] === objects[0]);\r\n * // => true\r\n */\n\nfunction clone(value) {\n  return (0, _baseClone.default)(value, CLONE_SYMBOLS_FLAG);\n}\n\nvar _default = clone;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/lodash-es/clone.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/lodash-es/clone.js","original":{"line":3,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/lodash-es/clone.js","original":{"line":4,"column":0}},{"name":"CLONE_SYMBOLS_FLAG","generated":{"line":13,"column":4},"source":"node_modules/lodash-es/clone.js","original":{"line":4,"column":4}},{"generated":{"line":13,"column":22},"source":"node_modules/lodash-es/clone.js","original":{"line":4,"column":22}},{"generated":{"line":13,"column":25},"source":"node_modules/lodash-es/clone.js","original":{"line":4,"column":25}},{"generated":{"line":13,"column":26},"source":"node_modules/lodash-es/clone.js","original":{"line":4,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/lodash-es/clone.js","original":{"line":6,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/lodash-es/clone.js","original":{"line":7,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/lodash-es/clone.js","original":{"line":8,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/lodash-es/clone.js","original":{"line":9,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/lodash-es/clone.js","original":{"line":10,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/lodash-es/clone.js","original":{"line":11,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/lodash-es/clone.js","original":{"line":12,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/lodash-es/clone.js","original":{"line":13,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/lodash-es/clone.js","original":{"line":14,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/lodash-es/clone.js","original":{"line":15,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/lodash-es/clone.js","original":{"line":16,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/lodash-es/clone.js","original":{"line":17,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/lodash-es/clone.js","original":{"line":18,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/lodash-es/clone.js","original":{"line":19,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/lodash-es/clone.js","original":{"line":20,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/lodash-es/clone.js","original":{"line":21,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/lodash-es/clone.js","original":{"line":22,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/lodash-es/clone.js","original":{"line":23,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/lodash-es/clone.js","original":{"line":24,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/lodash-es/clone.js","original":{"line":25,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/lodash-es/clone.js","original":{"line":26,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/lodash-es/clone.js","original":{"line":27,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/lodash-es/clone.js","original":{"line":28,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/lodash-es/clone.js","original":{"line":29,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/lodash-es/clone.js","original":{"line":30,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/lodash-es/clone.js","original":{"line":31,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/lodash-es/clone.js","original":{"line":32,"column":0}},{"name":"clone","generated":{"line":41,"column":9},"source":"node_modules/lodash-es/clone.js","original":{"line":32,"column":9}},{"generated":{"line":41,"column":14},"source":"node_modules/lodash-es/clone.js","original":{"line":32,"column":0}},{"name":"value","generated":{"line":41,"column":15},"source":"node_modules/lodash-es/clone.js","original":{"line":32,"column":15}},{"generated":{"line":41,"column":20},"source":"node_modules/lodash-es/clone.js","original":{"line":32,"column":0}},{"generated":{"line":41,"column":22},"source":"node_modules/lodash-es/clone.js","original":{"line":32,"column":22}},{"generated":{"line":42,"column":0},"source":"node_modules/lodash-es/clone.js","original":{"line":33,"column":2}},{"generated":{"line":42,"column":9},"source":"node_modules/lodash-es/clone.js","original":{"line":33,"column":9}},{"name":"value","generated":{"line":42,"column":33},"source":"node_modules/lodash-es/clone.js","original":{"line":33,"column":19}},{"generated":{"line":42,"column":38},"source":"node_modules/lodash-es/clone.js","original":{"line":33,"column":9}},{"name":"CLONE_SYMBOLS_FLAG","generated":{"line":42,"column":40},"source":"node_modules/lodash-es/clone.js","original":{"line":33,"column":26}},{"generated":{"line":42,"column":58},"source":"node_modules/lodash-es/clone.js","original":{"line":33,"column":9}},{"generated":{"line":42,"column":59},"source":"node_modules/lodash-es/clone.js","original":{"line":33,"column":2}},{"generated":{"line":43,"column":0},"source":"node_modules/lodash-es/clone.js","original":{"line":34,"column":1}},{"name":"clone","generated":{"line":45,"column":15},"source":"node_modules/lodash-es/clone.js","original":{"line":36,"column":15}}],"sources":{"node_modules/lodash-es/clone.js":"import baseClone from './_baseClone.js';\r\n\r\n/** Used to compose bitmasks for cloning. */\r\nvar CLONE_SYMBOLS_FLAG = 4;\r\n\r\n/**\r\n * Creates a shallow clone of `value`.\r\n *\r\n * **Note:** This method is loosely based on the\r\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\r\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\r\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\r\n * arrays. The own enumerable properties of `arguments` objects are cloned\r\n * as plain objects. An empty object is returned for uncloneable values such\r\n * as error objects, functions, DOM nodes, and WeakMaps.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to clone.\r\n * @returns {*} Returns the cloned value.\r\n * @see _.cloneDeep\r\n * @example\r\n *\r\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\r\n *\r\n * var shallow = _.clone(objects);\r\n * console.log(shallow[0] === objects[0]);\r\n * // => true\r\n */\r\nfunction clone(value) {\r\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\r\n}\r\n\r\nexport default clone;\r\n"},"lineCount":null}},"error":null,"hash":"27aa389fb2da98480519a678e4c0440b","cacheData":{"env":{}}}