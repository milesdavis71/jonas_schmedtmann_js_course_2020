{"id":"node_modules/lodash-es/thru.js","dependencies":[{"name":"C:\\Users\\istvan\\VSCodeProjets\\jonas_schmedtmann_js_course_2020\\17-Modern-JS-Modules-Tooling\\gyakorol\\package.json","includedInParent":true,"mtime":1626191812487},{"name":"C:\\Users\\istvan\\VSCodeProjets\\jonas_schmedtmann_js_course_2020\\17-Modern-JS-Modules-Tooling\\gyakorol\\node_modules\\lodash-es\\package.json","includedInParent":true,"mtime":1626186208790}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\r\n * This method is like `_.tap` except that it returns the result of `interceptor`.\r\n * The purpose of this method is to \"pass thru\" values replacing intermediate\r\n * results in a method chain sequence.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Seq\r\n * @param {*} value The value to provide to `interceptor`.\r\n * @param {Function} interceptor The function to invoke.\r\n * @returns {*} Returns the result of `interceptor`.\r\n * @example\r\n *\r\n * _('  abc  ')\r\n *  .chain()\r\n *  .trim()\r\n *  .thru(function(value) {\r\n *    return [value];\r\n *  })\r\n *  .value();\r\n * // => ['abc']\r\n */\nfunction thru(value, interceptor) {\n  return interceptor(value);\n}\n\nvar _default = thru;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/lodash-es/thru.js","original":{"line":1,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/lodash-es/thru.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/lodash-es/thru.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/lodash-es/thru.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/lodash-es/thru.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/lodash-es/thru.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/lodash-es/thru.js","original":{"line":7,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/lodash-es/thru.js","original":{"line":8,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/lodash-es/thru.js","original":{"line":9,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/lodash-es/thru.js","original":{"line":10,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/lodash-es/thru.js","original":{"line":11,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/lodash-es/thru.js","original":{"line":12,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/lodash-es/thru.js","original":{"line":13,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/lodash-es/thru.js","original":{"line":14,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/lodash-es/thru.js","original":{"line":15,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/lodash-es/thru.js","original":{"line":16,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/lodash-es/thru.js","original":{"line":17,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/lodash-es/thru.js","original":{"line":18,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/lodash-es/thru.js","original":{"line":19,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/lodash-es/thru.js","original":{"line":20,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/lodash-es/thru.js","original":{"line":21,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/lodash-es/thru.js","original":{"line":22,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/lodash-es/thru.js","original":{"line":23,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/lodash-es/thru.js","original":{"line":24,"column":0}},{"name":"thru","generated":{"line":31,"column":9},"source":"node_modules/lodash-es/thru.js","original":{"line":24,"column":9}},{"generated":{"line":31,"column":13},"source":"node_modules/lodash-es/thru.js","original":{"line":24,"column":0}},{"name":"value","generated":{"line":31,"column":14},"source":"node_modules/lodash-es/thru.js","original":{"line":24,"column":14}},{"generated":{"line":31,"column":19},"source":"node_modules/lodash-es/thru.js","original":{"line":24,"column":0}},{"name":"interceptor","generated":{"line":31,"column":21},"source":"node_modules/lodash-es/thru.js","original":{"line":24,"column":21}},{"generated":{"line":31,"column":32},"source":"node_modules/lodash-es/thru.js","original":{"line":24,"column":0}},{"generated":{"line":31,"column":34},"source":"node_modules/lodash-es/thru.js","original":{"line":24,"column":34}},{"generated":{"line":32,"column":0},"source":"node_modules/lodash-es/thru.js","original":{"line":25,"column":2}},{"name":"interceptor","generated":{"line":32,"column":9},"source":"node_modules/lodash-es/thru.js","original":{"line":25,"column":9}},{"generated":{"line":32,"column":20},"source":"node_modules/lodash-es/thru.js","original":{"line":25,"column":20}},{"name":"value","generated":{"line":32,"column":21},"source":"node_modules/lodash-es/thru.js","original":{"line":25,"column":21}},{"generated":{"line":32,"column":26},"source":"node_modules/lodash-es/thru.js","original":{"line":25,"column":20}},{"generated":{"line":32,"column":27},"source":"node_modules/lodash-es/thru.js","original":{"line":25,"column":2}},{"generated":{"line":33,"column":0},"source":"node_modules/lodash-es/thru.js","original":{"line":26,"column":1}},{"name":"thru","generated":{"line":35,"column":15},"source":"node_modules/lodash-es/thru.js","original":{"line":28,"column":15}}],"sources":{"node_modules/lodash-es/thru.js":"/**\r\n * This method is like `_.tap` except that it returns the result of `interceptor`.\r\n * The purpose of this method is to \"pass thru\" values replacing intermediate\r\n * results in a method chain sequence.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Seq\r\n * @param {*} value The value to provide to `interceptor`.\r\n * @param {Function} interceptor The function to invoke.\r\n * @returns {*} Returns the result of `interceptor`.\r\n * @example\r\n *\r\n * _('  abc  ')\r\n *  .chain()\r\n *  .trim()\r\n *  .thru(function(value) {\r\n *    return [value];\r\n *  })\r\n *  .value();\r\n * // => ['abc']\r\n */\r\nfunction thru(value, interceptor) {\r\n  return interceptor(value);\r\n}\r\n\r\nexport default thru;\r\n"},"lineCount":null}},"error":null,"hash":"2ceb50152154f5138174a71d56706b45","cacheData":{"env":{}}}