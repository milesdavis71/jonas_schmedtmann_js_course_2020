{"id":"node_modules/lodash-es/countBy.js","dependencies":[{"name":"C:\\Users\\istvan\\VSCodeProjets\\jonas_schmedtmann_js_course_2020\\17-Modern-JS-Modules-Tooling\\gyakorol\\package.json","includedInParent":true,"mtime":1626191812487},{"name":"C:\\Users\\istvan\\VSCodeProjets\\jonas_schmedtmann_js_course_2020\\17-Modern-JS-Modules-Tooling\\gyakorol\\node_modules\\lodash-es\\package.json","includedInParent":true,"mtime":1626186208790},{"name":"./_baseAssignValue.js","loc":{"line":1,"column":28},"parent":"C:\\Users\\istvan\\VSCodeProjets\\jonas_schmedtmann_js_course_2020\\17-Modern-JS-Modules-Tooling\\gyakorol\\node_modules\\lodash-es\\countBy.js","resolved":"C:\\Users\\istvan\\VSCodeProjets\\jonas_schmedtmann_js_course_2020\\17-Modern-JS-Modules-Tooling\\gyakorol\\node_modules\\lodash-es\\_baseAssignValue.js"},{"name":"./_createAggregator.js","loc":{"line":2,"column":29},"parent":"C:\\Users\\istvan\\VSCodeProjets\\jonas_schmedtmann_js_course_2020\\17-Modern-JS-Modules-Tooling\\gyakorol\\node_modules\\lodash-es\\countBy.js","resolved":"C:\\Users\\istvan\\VSCodeProjets\\jonas_schmedtmann_js_course_2020\\17-Modern-JS-Modules-Tooling\\gyakorol\\node_modules\\lodash-es\\_createAggregator.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _baseAssignValue = _interopRequireDefault(require(\"./_baseAssignValue.js\"));\n\nvar _createAggregator = _interopRequireDefault(require(\"./_createAggregator.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\r\n * Creates an object composed of keys generated from the results of running\r\n * each element of `collection` thru `iteratee`. The corresponding value of\r\n * each key is the number of times the key was returned by `iteratee`. The\r\n * iteratee is invoked with one argument: (value).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.5.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\r\n * @returns {Object} Returns the composed aggregate object.\r\n * @example\r\n *\r\n * _.countBy([6.1, 4.2, 6.3], Math.floor);\r\n * // => { '4': 1, '6': 2 }\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.countBy(['one', 'two', 'three'], 'length');\r\n * // => { '3': 2, '5': 1 }\r\n */\n\nvar countBy = (0, _createAggregator.default)(function (result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    ++result[key];\n  } else {\n    (0, _baseAssignValue.default)(result, key, 1);\n  }\n});\nvar _default = countBy;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":2,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":4,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":5,"column":0}},{"name":"objectProto","generated":{"line":15,"column":4},"source":"node_modules/lodash-es/countBy.js","original":{"line":5,"column":4}},{"generated":{"line":15,"column":15},"source":"node_modules/lodash-es/countBy.js","original":{"line":5,"column":15}},{"name":"Object","generated":{"line":15,"column":18},"source":"node_modules/lodash-es/countBy.js","original":{"line":5,"column":18}},{"generated":{"line":15,"column":24},"source":"node_modules/lodash-es/countBy.js","original":{"line":5,"column":24}},{"name":"prototype","generated":{"line":15,"column":25},"source":"node_modules/lodash-es/countBy.js","original":{"line":5,"column":25}},{"generated":{"line":15,"column":34},"source":"node_modules/lodash-es/countBy.js","original":{"line":5,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":7,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":8,"column":0}},{"name":"hasOwnProperty","generated":{"line":18,"column":4},"source":"node_modules/lodash-es/countBy.js","original":{"line":8,"column":4}},{"generated":{"line":18,"column":18},"source":"node_modules/lodash-es/countBy.js","original":{"line":8,"column":18}},{"name":"objectProto","generated":{"line":18,"column":21},"source":"node_modules/lodash-es/countBy.js","original":{"line":8,"column":21}},{"generated":{"line":18,"column":32},"source":"node_modules/lodash-es/countBy.js","original":{"line":8,"column":32}},{"name":"hasOwnProperty","generated":{"line":18,"column":33},"source":"node_modules/lodash-es/countBy.js","original":{"line":8,"column":33}},{"generated":{"line":18,"column":47},"source":"node_modules/lodash-es/countBy.js","original":{"line":8,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":10,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":11,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":12,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":13,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":14,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":15,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":16,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":17,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":18,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":19,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":20,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":21,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":22,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":23,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":24,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":25,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":26,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":27,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":28,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":29,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":30,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":31,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":32,"column":0}},{"name":"countBy","generated":{"line":42,"column":4},"source":"node_modules/lodash-es/countBy.js","original":{"line":32,"column":4}},{"generated":{"line":42,"column":11},"source":"node_modules/lodash-es/countBy.js","original":{"line":32,"column":11}},{"generated":{"line":42,"column":14},"source":"node_modules/lodash-es/countBy.js","original":{"line":32,"column":14}},{"generated":{"line":42,"column":45},"source":"node_modules/lodash-es/countBy.js","original":{"line":32,"column":31}},{"name":"result","generated":{"line":42,"column":55},"source":"node_modules/lodash-es/countBy.js","original":{"line":32,"column":40}},{"generated":{"line":42,"column":61},"source":"node_modules/lodash-es/countBy.js","original":{"line":32,"column":31}},{"name":"value","generated":{"line":42,"column":63},"source":"node_modules/lodash-es/countBy.js","original":{"line":32,"column":48}},{"generated":{"line":42,"column":68},"source":"node_modules/lodash-es/countBy.js","original":{"line":32,"column":31}},{"name":"key","generated":{"line":42,"column":70},"source":"node_modules/lodash-es/countBy.js","original":{"line":32,"column":55}},{"generated":{"line":42,"column":73},"source":"node_modules/lodash-es/countBy.js","original":{"line":32,"column":31}},{"generated":{"line":42,"column":75},"source":"node_modules/lodash-es/countBy.js","original":{"line":32,"column":60}},{"generated":{"line":43,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":33,"column":2}},{"name":"hasOwnProperty","generated":{"line":43,"column":6},"source":"node_modules/lodash-es/countBy.js","original":{"line":33,"column":6}},{"generated":{"line":43,"column":20},"source":"node_modules/lodash-es/countBy.js","original":{"line":33,"column":20}},{"name":"call","generated":{"line":43,"column":21},"source":"node_modules/lodash-es/countBy.js","original":{"line":33,"column":21}},{"generated":{"line":43,"column":25},"source":"node_modules/lodash-es/countBy.js","original":{"line":33,"column":6}},{"name":"result","generated":{"line":43,"column":26},"source":"node_modules/lodash-es/countBy.js","original":{"line":33,"column":26}},{"generated":{"line":43,"column":32},"source":"node_modules/lodash-es/countBy.js","original":{"line":33,"column":6}},{"name":"key","generated":{"line":43,"column":34},"source":"node_modules/lodash-es/countBy.js","original":{"line":33,"column":34}},{"generated":{"line":43,"column":37},"source":"node_modules/lodash-es/countBy.js","original":{"line":33,"column":6}},{"generated":{"line":43,"column":38},"source":"node_modules/lodash-es/countBy.js","original":{"line":33,"column":2}},{"generated":{"line":43,"column":40},"source":"node_modules/lodash-es/countBy.js","original":{"line":33,"column":40}},{"generated":{"line":44,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":34,"column":4}},{"name":"result","generated":{"line":44,"column":6},"source":"node_modules/lodash-es/countBy.js","original":{"line":34,"column":6}},{"generated":{"line":44,"column":12},"source":"node_modules/lodash-es/countBy.js","original":{"line":34,"column":12}},{"name":"key","generated":{"line":44,"column":13},"source":"node_modules/lodash-es/countBy.js","original":{"line":34,"column":13}},{"generated":{"line":44,"column":16},"source":"node_modules/lodash-es/countBy.js","original":{"line":34,"column":12}},{"generated":{"line":44,"column":17},"source":"node_modules/lodash-es/countBy.js","original":{"line":34,"column":4}},{"generated":{"line":45,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":35,"column":3}},{"generated":{"line":45,"column":3},"source":"node_modules/lodash-es/countBy.js","original":{"line":33,"column":2}},{"generated":{"line":45,"column":9},"source":"node_modules/lodash-es/countBy.js","original":{"line":35,"column":9}},{"generated":{"line":46,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":36,"column":4}},{"name":"result","generated":{"line":46,"column":34},"source":"node_modules/lodash-es/countBy.js","original":{"line":36,"column":20}},{"generated":{"line":46,"column":40},"source":"node_modules/lodash-es/countBy.js","original":{"line":36,"column":4}},{"name":"key","generated":{"line":46,"column":42},"source":"node_modules/lodash-es/countBy.js","original":{"line":36,"column":28}},{"generated":{"line":46,"column":45},"source":"node_modules/lodash-es/countBy.js","original":{"line":36,"column":4}},{"generated":{"line":46,"column":47},"source":"node_modules/lodash-es/countBy.js","original":{"line":36,"column":33}},{"generated":{"line":46,"column":48},"source":"node_modules/lodash-es/countBy.js","original":{"line":36,"column":4}},{"generated":{"line":47,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":37,"column":3}},{"generated":{"line":48,"column":0},"source":"node_modules/lodash-es/countBy.js","original":{"line":38,"column":1}},{"generated":{"line":48,"column":1},"source":"node_modules/lodash-es/countBy.js","original":{"line":32,"column":14}},{"generated":{"line":48,"column":2},"source":"node_modules/lodash-es/countBy.js","original":{"line":32,"column":0}},{"name":"countBy","generated":{"line":49,"column":15},"source":"node_modules/lodash-es/countBy.js","original":{"line":40,"column":15}}],"sources":{"node_modules/lodash-es/countBy.js":"import baseAssignValue from './_baseAssignValue.js';\r\nimport createAggregator from './_createAggregator.js';\r\n\r\n/** Used for built-in method references. */\r\nvar objectProto = Object.prototype;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/**\r\n * Creates an object composed of keys generated from the results of running\r\n * each element of `collection` thru `iteratee`. The corresponding value of\r\n * each key is the number of times the key was returned by `iteratee`. The\r\n * iteratee is invoked with one argument: (value).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.5.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\r\n * @returns {Object} Returns the composed aggregate object.\r\n * @example\r\n *\r\n * _.countBy([6.1, 4.2, 6.3], Math.floor);\r\n * // => { '4': 1, '6': 2 }\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.countBy(['one', 'two', 'three'], 'length');\r\n * // => { '3': 2, '5': 1 }\r\n */\r\nvar countBy = createAggregator(function(result, value, key) {\r\n  if (hasOwnProperty.call(result, key)) {\r\n    ++result[key];\r\n  } else {\r\n    baseAssignValue(result, key, 1);\r\n  }\r\n});\r\n\r\nexport default countBy;\r\n"},"lineCount":null}},"error":null,"hash":"e88fb074be50baf6ec48413c235cf4b4","cacheData":{"env":{}}}